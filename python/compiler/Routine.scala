package memGen.memory.cache

object RoutineROM {

	val routineActions = Array [RoutinePC](
		Routine (Load_IS), Actions(Seq("set_state")), DstState("IS"), 
		Routine (Load_IM), Actions(Seq("set_state")), DstState("IM"), 
		Routine (Load_MI), Actions(Seq("set_state")), DstState("MI"), 
		Routine (Load_II), Actions(Seq("set_state")), DstState("II"), 
		Routine (Load_MII), Actions(Seq("set_state")), DstState("MII"), 
		Routine (Ifetch_IS), Actions(Seq("set_state")), DstState("IS"), 
		Routine (Ifetch_IM), Actions(Seq("set_state")), DstState("IM"), 
		Routine (Ifetch_MI), Actions(Seq("set_state")), DstState("MI"), 
		Routine (Ifetch_II), Actions(Seq("set_state")), DstState("II"), 
		Routine (Ifetch_MII), Actions(Seq("set_state")), DstState("MII"), 
		Routine (Store_IS), Actions(Seq("set_state")), DstState("IS"), 
		Routine (Store_IM), Actions(Seq("set_state")), DstState("IM"), 
		Routine (Store_MI), Actions(Seq("set_state")), DstState("MI"), 
		Routine (Store_II), Actions(Seq("set_state")), DstState("II"), 
		Routine (Store_MII), Actions(Seq("set_state")), DstState("MII"), 
		Routine (Replacement_IS), Actions(Seq("set_state")), DstState("IS"), 
		Routine (Replacement_IM), Actions(Seq("set_state")), DstState("IM"), 
		Routine (Replacement_MI), Actions(Seq("set_state")), DstState("MI"), 
		Routine (Replacement_II), Actions(Seq("set_state")), DstState("II"), 
		Routine (Replacement_MII), Actions(Seq("set_state")), DstState("MII"), 
		Routine (Fwd_GETX_IS), Actions(Seq("set_state")), DstState("IS"), 
		Routine (Fwd_GETX_IM), Actions(Seq("set_state")), DstState("IM"), 
		Routine (Inv_IS), Actions(Seq("set_state")), DstState("IS"), 
		Routine (Inv_IM), Actions(Seq("set_state")), DstState("IM"), 
		Routine (Inv_MI), Actions(Seq("o_popForwardedRequestQueue")), DstState("MI"), 
		Routine (Store_M), Actions(Seq("s_store_hit", "p_profileHit", "m_popMandatoryQueue")), DstState("M"), 
		Routine (Load_M), Actions(Seq("r_load_hit", "p_profileHit", "m_popMandatoryQueue")), DstState("M"), 
		Routine (Ifetch_M), Actions(Seq("r_load_hit", "p_profileHit", "m_popMandatoryQueue")), DstState("M"), 
		Routine (Inv_I), Actions(Seq("o_popForwardedRequestQueue")), DstState("I"), 
		Routine (Store_I), Actions(Seq("v_allocateTBE", "i_allocateL", "a_issueRequest", "p_profileMiss", "m_popMandatoryQueue")), DstState("IM"), 
		Routine (Load_I), Actions(Seq("v_allocateTBE", "i_allocateL", "a_issueRequest", "p_profileMiss", "m_popMandatoryQueue")), DstState("IS"), 
		Routine (Ifetch_I), Actions(Seq("v_allocateTBE", "i_allocateL", "a_issueRequest", "p_profileMiss", "m_popMandatoryQueue")), DstState("IS"), 
		Routine (Data_IS), Actions(Seq("u_writeDataToCache", "rx_load_hit", "w_deallocateTBE", "n_popResponseQueue")), DstState("M"), 
		Routine (Data_IM), Actions(Seq("u_writeDataToCache", "sx_store_hit", "w_deallocateTBE", "n_popResponseQueue")), DstState("M"), 
		Routine (Fwd_GETX_M), Actions(Seq("e_sendData", "forward_eviction_to_cpu", "o_popForwardedRequestQueue")), DstState("I"), 
		Routine (Replacement_I), Actions(Seq("h_deallocateL")), DstState("I"), 
		Routine (Replacement_M), Actions(Seq("v_allocateTBE", "b_issuePUT", "x_copyDataFromCacheToTBE", "forward_eviction_to_cpu", "h_deallocateL")), DstState("MI"), 
		Routine (Inv_M), Actions(Seq("v_allocateTBE", "b_issuePUT", "x_copyDataFromCacheToTBE", "forward_eviction_to_cpu", "h_deallocateL")), DstState("MI"), 
		Routine (Writeback_Ack_MI), Actions(Seq("w_deallocateTBE", "o_popForwardedRequestQueue")), DstState("I"), 
		Routine (Fwd_GETX_MI), Actions(Seq("ee_sendDataFromTBE", "o_popForwardedRequestQueue")), DstState("II"), 
		Routine (Writeback_Nack_MI), Actions(Seq("o_popForwardedRequestQueue")), DstState("MII"), 
		Routine (Fwd_GETX_MII), Actions(Seq("ee_sendDataFromTBE", "w_deallocateTBE", "o_popForwardedRequestQueue")), DstState("I"), 
		Routine (Writeback_Nack_II), Actions(Seq("w_deallocateTBE", "o_popForwardedRequestQueue")), DstState("I")
	)
}
